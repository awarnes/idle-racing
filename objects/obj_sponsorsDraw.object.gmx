<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// stop song3

if (audio_is_playing(snd_song3)) {
    audio_stop_sound(snd_song3)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.soundon) {
    audio_play_sound(snd_song3, 1, true)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Text and Health Bars for Sponsors

ww = window_get_width();
wh = window_get_height();

wChunk = ww / 16;
hChunk = wh / 16;

tireBoostStartX = (17 / wChunk) * ww;
tireBoostStopX = (26 / wChunk) * ww;
gasOilStartX = (43 / wChunk) * ww;
gasOilStopX = (52 / wChunk) * ww;

tireOilOneY1 = (7 / hChunk) * wh;
tireOilOneY2 = (8 / hChunk) * wh;
tireOilOneY3 = (9 / hChunk) * wh;
tireOilOneY4 = (10 / hChunk) * wh;

tireOilTwoY1 = (12 / hChunk) * wh;
tireOilTwoY2 = (13 / hChunk) * wh;
tireOilTwoY3 = (14 / hChunk) * wh;
tireOilTwoY4 = (15 / hChunk) * wh;

gasBoostOneY1 = (21 / hChunk) * wh;
gasBoostOneY2 = (22 / hChunk) * wh;
gasBoostOneY3 = (23 / hChunk) * wh;
gasBoostOneY4 = (24 / hChunk) * wh;

gasBoostTwoY1 = (26 / hChunk) * wh;
gasBoostTwoY2 = (27 / hChunk) * wh;
gasBoostTwoY3 = (28 / hChunk) * wh;
gasBoostTwoY4 = (29 / hChunk) * wh;

// Cash
draw_text_ext_transformed_colour(128, 528, "Cash: #$" + string(global.playerCash), 15, 256, 2, 1.5, 0, c_black, c_black, c_black, c_black, 1)

// Tire 1
draw_text_ext_transformed_colour(tireBoostStartX, tireOilOneY1, "$/Tick", 15, 256, 1, 1, 0, c_black, c_black, c_black, c_black, 1)
tireS1Cost = global.tireS1BaseCost * power(global.tireS1Mod, global.tireS1Level);
draw_text_ext_transformed_colour(tireBoostStartX, tireOilOneY2, "Cost: $" + string(tireS1Cost), 15, 256, 1, 1, 0, c_black, c_black, c_black, c_black, 1)
tireS1Health = (global.tireS1Level / global.tireS1Max) * 100;
draw_healthbar(tireBoostStartX, tireOilOneY3, tireBoostStopX, tireOilOneY4, tireS1Health, c_dkgray, c_lime, c_lime, 0, true, true)

// Tire 2
draw_text_ext_transformed_colour(tireBoostStartX, tireOilTwoY1, "Cheaper Refill", 0, 256, 1, 1, 0, c_black, c_black, c_black, c_black, 1)
tireS2Cost = global.tireS2BaseCost * power(global.tireS2Mod, global.tireS2Level);
draw_text_ext_transformed_colour(tireBoostStartX, tireOilTwoY2, "Cost: $" + string(tireS2Cost), 0, 256, 1, 1, 0, c_black, c_black, c_black, c_black, 1)
tireS2Health = (global.tireS2Level / global.tireS2Max) * 100;
draw_healthbar(tireBoostStartX, tireOilTwoY3, tireBoostStopX, tireOilTwoY4, tireS2Health, c_dkgray, c_lime, c_lime, 0, true, true)

// Oil 1
draw_text_ext_transformed_colour(gasOilStartX, tireOilOneY1, "$/Tick", 0, 256, 1, 1, 0, c_black, c_black, c_black, c_black, 1)
oilS1Cost = global.oilS1BaseCost * power(global.oilS1Mod, global.oilS1Level);
draw_text_ext_transformed_colour(gasOilStartX, tireOilOneY2, "Cost: $" + string(oilS1Cost), 0, 256, 1, 1, 0, c_black, c_black, c_black, c_black, 1)
oilS1Health = (global.oilS1Level / global.oilS1Max) * 100;
draw_healthbar(gasOilStartX, tireOilOneY3, gasOilStopX, tireOilOneY4, oilS1Health, c_dkgray, c_lime, c_lime, 0, true, true)

// Oil 2
draw_text_ext_transformed_colour(gasOilStartX, tireOilTwoY1, "Cheaper Refill", 0, 256, 1, 1, 0, c_black, c_black, c_black, c_black, 1)
oilS2Cost = global.oilS2BaseCost * power(global.oilS2Mod, global.oilS2Level);
draw_text_ext_transformed_colour(gasOilStartX, tireOilTwoY2, "Cost: $" + string(oilS2Cost), 0, 256, 1, 1, 0, c_black, c_black, c_black, c_black, 1)
oilS2Health = (global.oilS2Level / global.oilS2Max) * 100;
draw_healthbar(gasOilStartX, tireOilTwoY3, gasOilStopX, tireOilTwoY4, oilS2Health, c_dkgray, c_lime, c_lime, 0, true, true)

// Boost 1
draw_text_ext_transformed_colour(tireBoostStartX, gasBoostOneY1, "$/Tick", 0, 256, 1, 1, 0, c_black, c_black, c_black, c_black, 1)
boostS1Cost = global.boostS1BaseCost * power(global.boostS1Mod, global.boostS1Level);
draw_text_ext_transformed_colour(tireBoostStartX, gasBoostOneY2, "Cost: $" + string(boostS1Cost), 0, 256, 1, 1, 0, c_black, c_black, c_black, c_black, 1)
boostS1Health = (global.boostS1Level / global.boostS1Max) * 100;
draw_healthbar(tireBoostStartX, gasBoostOneY3, tireBoostStopX, gasBoostOneY4, boostS1Health, c_dkgray, c_lime, c_lime, 0, true, true)

// Boost 2
draw_text_ext_transformed_colour(tireBoostStartX, gasBoostTwoY1, "Boost Speed", 0, 256, 1, 1, 0, c_black, c_black, c_black, c_black, 1)
boostS2Cost = global.boostS2BaseCost * power(global.boostS2Mod, global.boostS2Level);
draw_text_ext_transformed_colour(tireBoostStartX, gasBoostTwoY2, "Cost: $" + string(boostS2Cost), 0, 256, 1, 1, 0, c_black, c_black, c_black, c_black, 1)
boostS2Health = (global.boostS2Level / global.boostS2Max) * 100;
draw_healthbar(tireBoostStartX, gasBoostTwoY3, tireBoostStopX, gasBoostTwoY4, boostS2Health, c_dkgray, c_lime, c_lime, 0, true, true)

// Gas 1
draw_text_ext_transformed_colour(gasOilStartX, gasBoostOneY1, "$/Tick", 0, 256, 1, 1, 0, c_black, c_black, c_black, c_black, 1)
gasS1Cost = global.gasS1BaseCost * power(global.gasS1Mod, global.gasS1Level);
draw_text_ext_transformed_colour(gasOilStartX, gasBoostOneY2, "Cost: $" + string(gasS1Cost), 0, 256, 1, 1, 0, c_black, c_black, c_black, c_black, 1)
gasS1Health = (global.gasS1Level / global.gasS1Max) * 100;
draw_healthbar(gasOilStartX, gasBoostOneY3, gasOilStopX, gasBoostOneY4, gasS1Health, c_dkgray, c_lime, c_lime, 0, true, true)

// Gas 2
draw_text_ext_transformed_colour(gasOilStartX, gasBoostTwoY1, "Cheaper Refill", 0, 256, 1, 1, 0, c_black, c_black, c_black, c_black, 1)
gasS2Cost = global.gasS2BaseCost * power(global.gasS2Mod, global.gasS2Level);
draw_text_ext_transformed_colour(gasOilStartX, gasBoostTwoY2, "Cost: $" + string(gasS2Cost), 0, 256, 1, 1, 0, c_black, c_black, c_black, c_black, 1)
gasS2Health = (global.gasS2Level / global.gasS2Max) * 100;
draw_healthbar(gasOilStartX, gasBoostTwoY3, gasOilStopX, gasBoostTwoY4, gasS2Health, c_dkgray, c_lime, c_lime, 0, true, true)

baseStartX = (29 / wChunk) * ww;
baseStopX = (38 / wChunk) * ww;

baseOneY1 = (34 / hChunk) * wh;
baseOneY2 = (35 / hChunk) * wh;
baseOneY3 = (36 / hChunk) * wh;
baseOneY4 = (37 / hChunk) * wh;

baseTwoY1 = (39 / hChunk) * wh;
baseTwoY2 = (40 / hChunk) * wh;
baseTwoY3 = (41 / hChunk) * wh;
baseTwoY4 = (42 / hChunk) * wh;

// Base 1
draw_text_ext_transformed_colour(baseStartX, baseOneY1, "$/Tick", 0, 256, 1, 1, 0, c_black, c_black, c_black, c_black, 1)
baseS1Cost = global.baseS1BaseCost * power(global.baseS1Mod, global.baseS1Level);
draw_text_ext_transformed_colour(baseStartX, baseOneY2, "Cost: $" + string(baseS1Cost), 0, 256, 1, 1, 0, c_black, c_black, c_black, c_black, 1)
baseS1Health = (global.baseS1Level / global.baseS1Max) * 100;
draw_healthbar(baseStartX, baseOneY3, baseStopX, baseOneY4, baseS1Health, c_dkgray, c_lime, c_lime, 0, true, true)

// Base 2
draw_text_ext_transformed_colour(baseStartX, baseTwoY1, "$/Lap", 0, 256, 1, 1, 0, c_black, c_black, c_black, c_black, 1)
baseS2Cost = global.baseS2BaseCost * power(global.baseS2Mod, global.baseS2Level);
draw_text_ext_transformed_colour(baseStartX, baseTwoY2, "Cost: $" + string(baseS2Cost), 0, 256, 1, 1, 0, c_black, c_black, c_black, c_black, 1)
baseS2Health = (global.baseS2Level / global.baseS2Max) * 100;
draw_healthbar(baseStartX, baseTwoY3, baseStopX, baseTwoY4, baseS2Health, c_dkgray, c_lime, c_lime, 0, true, true)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
