<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_upgradeButton</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>543</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_color</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>13</kind>
            <string>16777215</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize UpgradeButton

depth = -1003;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Upgrade thing!

currentRoom = room == rm_upgrade;

tireOne = instance_nearest(432, 128, obj_upgradeButton);
tireTwo = instance_nearest(432, 208, obj_upgradeButton);
oilOne = instance_nearest(848, 128, obj_upgradeButton);
oilTwo = instance_nearest(848, 208, obj_upgradeButton);
boostOne = instance_nearest(432, 352, obj_upgradeButton);
boostTwo = instance_nearest(432, 432, obj_upgradeButton);
gasOne = instance_nearest(848, 352, obj_upgradeButton);
gasTwo = instance_nearest(848, 432, obj_upgradeButton);
baseOne = instance_nearest(624, 544, obj_upgradeButton);
baseTwo = instance_nearest(624, 624, obj_upgradeButton);

tireOne2 = instance_nearest(432, 128, obj_upgradeButton);
tireTwo2 = instance_nearest(432, 208, obj_upgradeButton);
oilOne2 = instance_nearest(848, 128, obj_upgradeButton);
oilTwo2 = instance_nearest(848, 208, obj_upgradeButton);
boostOne2 = instance_nearest(432, 352, obj_upgradeButton);
boostTwo2 = instance_nearest(432, 432, obj_upgradeButton);
gasOne2 = instance_nearest(848, 352, obj_upgradeButton);
gasTwo2 = instance_nearest(848, 432, obj_upgradeButton);
baseOne2 = instance_nearest(624, 544, obj_upgradeButton);
baseTwo2 = instance_nearest(624, 624, obj_upgradeButton);

if (currentRoom) {
switch(id) {
    case tireOne: // tireU1
        if (global.tireU1Level &gt;= global.tireU1Max) {
            return noone;
        }
        if global.playerCash &gt;= (global.tireU1BaseCost * power(global.tireU1Mod, global.tireU1Level)) {
            if(global.tireU1Level &lt; global.tireU1Max){
                global.tireU1Level += 1;
                global.playerCash -= (global.tireU1BaseCost * power(global.tireU1Mod, global.tireU1Level))
            }
        }
        break;
    case tireTwo: // tireU2
        if (global.tireU2Level &gt;= global.tireU2Max) {
            return noone;
        }
        if global.playerCash &gt;= (global.tireU2BaseCost * power(global.tireU2Mod, global.tireU2Level)) {
            if(global.tireU2Level &lt; global.tireU2Max){
                global.tireU2Level += 1;
                global.playerCash -= (global.tireU2BaseCost * power(global.tireU2Mod, global.tireU2Level))
            }
        }
        break;

    case oilOne: // oilU1
        if (global.oilU1Level &gt;= global.oilU1Max) {
            return noone;
        }
        if global.playerCash &gt;= (global.oilU1BaseCost * power(global.oilU1Mod, global.oilU1Level)) {
            if(global.oilU1Level &lt; global.oilU1Max){
                global.oilU1Level += 1;
                global.playerCash -= (global.oilU1BaseCost * power(global.oilU1Mod, global.oilU1Level))
            }
        }
        break;
    case oilTwo: // oilU2
        if (global.oilU2Level &gt;= global.oilU2Max) {
            return noone;
        }
        if global.playerCash &gt;= (global.oilU2BaseCost * power(global.oilU2Mod, global.oilU2Level)) {
            if(global.oilU2Level &lt; global.oilU2Max){
                global.oilU2Level += 1;
                global.playerCash -= (global.oilU2BaseCost * power(global.oilU2Mod, global.oilU2Level))
            }
        }
        break;
    case boostOne: // boostU1
        if (global.boostU1Level &gt;= global.boostU1Max) {
            return noone;
        }
        if global.playerCash &gt;= (global.boostU1BaseCost * power(global.boostU1Mod, global.boostU1Level)) {
            if(global.boostU1Level &lt; global.boostU1Max){
                global.boostU1Level += 1;
                global.playerCash -= (global.boostU1BaseCost * power(global.boostU1Mod, global.boostU1Level))
            }
        }
        break;
    case boostTwo: // boostU2
        if (global.boostU2Level &gt;= global.boostU2Max) {
            return noone;
        }
        if global.playerCash &gt;= (global.boostU2BaseCost * power(global.boostU2Mod, global.boostU2Level)) {
            if(global.boostU2Level &lt; global.boostU2Max){
                global.boostU2Level += 1;
                global.playerCash -= (global.boostU2BaseCost * power(global.boostU2Mod, global.boostU2Level))
            }
        }
        break;
    case gasOne: // gasU1
        if (global.gasU1Level &gt;= global.gasU1Max) {
            return noone;
        }
        if global.playerCash &gt;= (global.gasU1BaseCost * power(global.gasU1Mod, global.gasU1Level)) {
            if(global.gasU1Level &lt; global.gasU1Max){
                global.gasU1Level += 1;
                global.playerCash -= (global.gasU1BaseCost * power(global.gasU1Mod, global.gasU1Level))
            }
        }
        break;
    case gasTwo: // gasU2
        if (global.gasU2Level &gt;= global.gasU2Max) {
            return noone;
        }
        if global.playerCash &gt;= (global.gasU2BaseCost * power(global.gasU2Mod, global.gasU2Level)) {
            if(global.gasU2Level &lt; global.gasU2Max){
                global.gasU2Level += 1;
                global.playerCash -= (global.gasU2BaseCost * power(global.gasU2Mod, global.gasU2Level))
            }
        }
        break;
}

} else {

switch (id) {
    case oilOne2: // oilS1
        if (global.oilS1Level &gt;= global.oilS1Max) {
            return noone;
        }
        if global.playerCash &gt;= (global.oilS1BaseCost * power(global.oilS1Mod, global.oilS1Level)) {
            if(global.oilS1Level &lt; global.oilS1Max){
                global.oilS1Level += 1;
                global.playerCash -= (global.oilS1BaseCost * power(global.oilS1Mod, global.oilS1Level))
            }
        }
        break;
    case oilTwo2: // oilS2
        if (global.oilS2Level &gt;= global.oilS2Max) {
            return noone;
        }
        if global.playerCash &gt;= (global.oilS2BaseCost * power(global.oilS2Mod, global.oilS2Level)) {
            if(global.oilS2Level &lt; global.oilS2Max){
                global.oilS2Level += 1;
                global.playerCash -= (global.oilS2BaseCost * power(global.oilS2Mod, global.oilS2Level))
            }
        }
        break;
    case tireOne2: // tireS1
        if (global.tireS1Level &gt;= global.tireS1Max) {
            return noone;
        }
        if global.playerCash &gt;= (global.tireS1BaseCost * power(global.tireS1Mod, global.tireS1Level)) {
            if(global.tireS1Level &lt; global.tireS1Max){
                global.tireS1Level += 1;
                global.playerCash -= (global.tireS1BaseCost * power(global.tireS1Mod, global.tireS1Level))
            }
        }
        break;
    case tireTwo2: // tireS2
        if (global.tireS2Level &gt;= global.tireS2Max) {
            return noone;
        }
        if global.playerCash &gt;= (global.tireS2BaseCost * power(global.tireS2Mod, global.tireS2Level)) {
            if(global.tireS2Level &lt; global.tireS2Max){
                global.tireS2Level += 1;
                global.playerCash -= (global.tireS2BaseCost * power(global.tireS2Mod, global.tireS2Level))
            }
        }
        break;
    case baseOne: // baseS1
        if (global.baseS1Level &gt;= global.baseS1Max) {
            return noone;
        }
        if global.playerCash &gt;= (global.baseS1BaseCost * power(global.baseS1Mod, global.baseS1Level)) {
            if(global.baseS1Level &lt; global.baseS1Max){
                global.baseS1Level += 1;
                global.playerCash -= (global.baseS1BaseCost * power(global.baseS1Mod, global.baseS1Level))
            }
        }
        break;
    case baseTwo: // baseS2
        if (global.baseS2Level &gt;= global.baseS2Max) {
            return noone;
        }
        if global.playerCash &gt;= (global.baseS2BaseCost * power(global.baseS2Mod, global.baseS2Level)) {
            if(global.baseS2Level &lt; global.baseS2Max){
                global.baseS2Level += 1;
                global.playerCash -= (global.baseS2BaseCost * power(global.baseS2Mod, global.baseS2Level))
            }
        }
        break;
    case gasOne2: // gasS1
        if (global.gasS1Level &gt;= global.gasS1Max) {
            return noone;
        }
        if global.playerCash &gt;= (global.gasS1BaseCost * power(global.gasS1Mod, global.gasS1Level)) {
            if(global.gasS1Level &lt; global.gasS1Max){
                global.gasS1Level += 1;
                global.playerCash -= (global.gasS1BaseCost * power(global.gasS1Mod, global.gasS1Level))
            }
        }
        break;
    case gasTwo2: // gasS2
        if (global.gasS2Level &gt;= global.gasS2Max) {
            return noone;
        }
        if global.playerCash &gt;= (global.gasS2BaseCost * power(global.gasS2Mod, global.gasS2Level)) {
            if(global.gasS2Level &lt; global.gasS2Max){
                global.gasS2Level += 1;
                global.playerCash -= (global.gasS2BaseCost * power(global.gasS2Mod, global.gasS2Level))
            }
        }
        break;
    case boostOne2: // boostS1
        if (global.boostS1Level &gt;= global.boostS1Max) {
            return noone;
        }
        if global.playerCash &gt;= (global.boostS1BaseCost * power(global.boostS1Mod, global.boostS1Level)) {
            if(global.boostS1Level &lt; global.boostS1Max){
                global.boostS1Level += 1;
                global.playerCash -= (global.boostS1BaseCost * power(global.boostS1Mod, global.boostS1Level))
            }
        }
        break;
    case boostTwo2: // boostS2
        if (global.boostS2Level &gt;= global.boostS2Max) {
            return noone;
        }
        if global.playerCash &gt;= (global.boostS2BaseCost * power(global.boostS2Mod, global.boostS2Level)) {
            if(global.boostS2Level &lt; global.boostS2Max){
                global.boostS2Level += 1;
                global.playerCash -= (global.boostS2BaseCost * power(global.boostS2Mod, global.boostS2Level))
            }
        }
        break;
    }
}

if (global.playerCash &lt; 0) {global.playerCash = 0;}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>543</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_color</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>13</kind>
            <string>16777215</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>543</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_color</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>13</kind>
            <string>8421504</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>.95</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
